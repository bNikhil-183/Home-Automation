/*
  Smart Environment Monitoring System
  ------------------------------------
  Features:
  - Smoke detection with alarm
  - Light-dependent LED brightness control
  - Temperature-based fan speed control

  Hardware Connections:
  - Smoke Sensor      -> A1
  - LDR               -> A0
  - Temperature Sensor-> A2
  - Alarm             -> Pin 2
  - LED               -> Pin 9 (PWM)
  - Fan               -> Pin 11 (PWM)
*/

// --- Pin Definitions ---
const int smokeSensorPin = A1;
const int ldrPin         = A0;
const int tempSensorPin  = A2;
const int alarmPin       = 2;
const int ledPin         = 9;
const int fanPin         = 11;

// --- Smoke Sensor Calibration Constants ---
const float SMOKE_SENSOR_LOW   = 320.0;
const float SMOKE_SENSOR_HIGH  = 760.0;
const float SMOKE_SENSOR_DIFF  = SMOKE_SENSOR_HIGH - SMOKE_SENSOR_LOW;
const float SMOKE_THRESHOLD    = 0.17; // Normalized threshold value

void setup() {
  // Initialize Serial Monitor
  Serial.begin(9600);

  // Set pin modes
  pinMode(ledPin, OUTPUT);
  pinMode(fanPin, OUTPUT);
  pinMode(alarmPin, OUTPUT);
}

void loop() {
  // --- Smoke Sensor Reading ---
  float gasRead = analogRead(smokeSensorPin); // Raw analog value
  float smokeLevel = (gasRead - SMOKE_SENSOR_LOW) / SMOKE_SENSOR_DIFF; // Normalize

  // Control Alarm based on smoke level
  if (smokeLevel < SMOKE_THRESHOLD) {
    digitalWrite(alarmPin, LOW);  // No smoke detected
  } else {
    digitalWrite(alarmPin, HIGH); // Smoke detected - activate alarm
  }

  Serial.print("Smoke Level: ");
  Serial.println(smokeLevel);

  // --- LDR and LED Brightness Control ---
  int ldrValue = analogRead(ldrPin); // Read LDR value
  int ledBrightness = map(ldrValue, 0, 1023, 255, 0); // Darker = brighter LED
  analogWrite(ledPin, ledBrightness); // Adjust LED brightness

  Serial.print("LDR Value: ");
  Serial.println(ldrValue);

  // --- Temperature Sensor and Fan Speed Control ---
  int tempRead = analogRead(tempSensorPin); // Read temperature sensor
  float voltage = tempRead * (5.0 / 1023.0); // Convert to voltage
  float temperatureC = (voltage - 0.5) * 100.0; // Convert to Celsius

  Serial.print("Temperature (Â°C): ");
  Serial.println(temperatureC);

  int fanSpeed = map(tempRead, 0, 1023, 0, 255); // Map to PWM range
  analogWrite(fanPin, fanSpeed); // Adjust fan speed

  delay(1000); // Delay for sensor stability
}
